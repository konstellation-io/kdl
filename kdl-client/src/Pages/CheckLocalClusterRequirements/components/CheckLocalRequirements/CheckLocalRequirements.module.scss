@import 'Styles/variables';
@import 'Styles/mixins';
@import 'Styles/colors';

$circle-diameter: $grid-unit;
$circle-top: 11px;
$circle-left: 0px;

.container {
  margin-bottom: 6 * $grid-unit;
}

.checkList ul {
  @include font-small;
  color: font-color(lowlight);

  padding: 0;

  li {
    transition: color ease 0.6s;
  }
}

@mixin status-circle($color) {
  color: $color;

  &:after {
    background-color: $color;
  }

  &:before {
    background-color: $color;
  }
}

.circle {
  @include circle(transparent);

  content: '';
  position: absolute;
  left: 0;
  top: 11px;
}

.requirement {
  list-style: none;
  position: relative;
  padding: $grid-unit 0 $grid-unit 2 * $grid-unit;

  &:before {
    @extend .circle;
  }

  &:after {
    @extend .circle;
  }

  &.pending {
    @include status-circle(palette(highlight));

    &:before {
      animation: loading-anim 2s ease 0s infinite;
    }
  }

  &.fail:before,
  &.ok:before {
    animation: loading-anim 0s ease, loading-anim 1s ease;
  }
  &.fail {
    @include status-circle(palette(error));
  }
  &.ok {
    @include status-circle(palette(success));
  }
}

.errorBox {
  position: relative;
  margin: 1.5 * $grid-unit 0 0 4 * $grid-unit;

  &:before,
  &:after {
    content: '';
    position: absolute;
  }

  &:before {
    top: -24px;
    left: -28px;
    width: 14px;
    height: 43px;
    border: dashed 1px palette(error);
    border-right-color: transparent;
    border-top-color: transparent;
  }
  &:after {
    width: 10px;
    height: 10px;
    border: 1px solid palette(error);
    border-top-color: transparent;
    border-left-color: transparent;
    top: 13px;
    left: -21px;
    transform: rotate(-33deg) skew(25deg);
  }
}

@mixin set-anim-state($diameter, $offset, $opacity) {
  width: $diameter;
  height: $diameter;
  top: $circle-top - $offset;
  left: $circle-left - $offset;
  opacity: $opacity;
}

$circle-increase: 1.8 * $grid-unit;
$circle-diameter-end: $circle-diameter + $circle-increase;
@keyframes loading-anim {
  0% {
    @include set-anim-state($circle-diameter, 0px, 0.6);
  }
  60%,
  100% {
    @include set-anim-state($circle-diameter-end, $circle-increase / 2, 0);
  }
}
